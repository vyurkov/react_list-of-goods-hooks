{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isStarted","setIsStarted","isReversed","setIsReversed","NONE","sortType","setSortType","visibleGoods","goods","sort","a","b","ALPABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","current","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,oDAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAkCE,IAAME,EAAgB,WAC3B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAASH,EAASQ,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAhCR,SACEC,EACAH,EACAH,GAGA,IAAMK,EAAY,YAAOC,GAkBzB,OAfAD,EAAaE,MAAK,SAACC,EAAGC,GACpB,OAAQN,GACN,KAAKT,EAASgB,QACZ,OAAOF,EAAEG,cAAcF,GACzB,KAAKf,EAASkB,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OACtB,QACE,OAAO,MAITb,GACFK,EAAaS,UAGRT,EAQcU,CACnBpB,EACAQ,EACAH,GAGF,OACE,qBAAKgB,UAAU,MAAf,SACGlB,EAEG,wBACEmB,KAAK,SACLC,QAAS,kBAAMnB,GAAa,SAAAoB,GAAO,OAAKA,MAF1C,mBAQA,qCACE,wBACEF,KAAK,SACLC,QAAS,kBAAMd,EAAYV,EAASgB,UAFtC,iCAOA,wBACEO,KAAK,SACLC,QAAS,kBAAMd,EAAYV,EAASkB,SAFtC,4BAOA,wBACEK,KAAK,SACLC,QAAS,kBAAMjB,GAAc,SAAAkB,GAAO,OAAKA,MAF3C,qBAOA,wBACEF,KAAK,SACLC,QAAS,WACPd,EAAYV,EAASQ,MACrBD,GAAc,IAJlB,mBAUA,oBAAIe,UAAU,QAAd,SACGX,EAAae,KAAI,SAAAC,GAAI,OACpB,oBACEL,UAAU,cADZ,SAIGK,GAFIA,cC3GvBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2b7c27e9.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\n// Use this function in the render method\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  // Not to mutate the original array\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return a.localeCompare(b);\n      case SortType.LENGTH:\n        return a.length - b.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isStarted, setIsStarted] = useState(true);\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const visibleGoods = getReorderedGoods(\n    goodsFromServer,\n    sortType,\n    isReversed,\n  );\n\n  return (\n    <div className=\"App\">\n      {isStarted\n        ? (\n          <button\n            type=\"button\"\n            onClick={() => setIsStarted(current => !current)}\n          >\n            Start\n          </button>\n        )\n        : (\n          <>\n            <button\n              type=\"button\"\n              onClick={() => setSortType(SortType.ALPABET)}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => setSortType(SortType.LENGTH)}\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => setIsReversed(current => !current)}\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => {\n                setSortType(SortType.NONE);\n                setIsReversed(false);\n              }}\n            >\n              Reset\n            </button>\n\n            <ul className=\"Goods\">\n              {visibleGoods.map(good => (\n                <li\n                  className=\"Goods__item\"\n                  key={good}\n                >\n                  {good}\n                </li>\n              ))}\n            </ul>\n          </>\n        )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}